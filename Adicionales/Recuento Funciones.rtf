{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww12220\viewh7520\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
isalpha: ok - Es alfab\'e9tico?\
isdigit: ok - Es d\'edgito?\
isalnum: ok - Es alfanum\'e9rico?\
isascii: ok - Es Ascii?\
isprint: ok - Es printable?\
strlen: ok - Longitud de str\
memset: ok - Devuelve un puntero con n cantidad de posiciones reempazadas por c.\
bzero: ok - Pone a cero los primeros n bytes de s.\
memcpy: ok - copia n caracteres de src a dst.\
memmove: ok - igual que memcpy pero con gesti\'f3n de errores\
strlcpy: ok, copia un src al final de dst.\
strlcat: ok, pero no entiendo para qu\'e9 mierda sirve.\
toupper: ok - Pasa todo a may\'fasculas\
tolower: ok - Pasa todo a min\'fasculas\
strchr: ok - Devuelve en qu\'e9 posici\'f3n de str est\'e1 c.\
strrchr: ok - Igual que strrch pero busca la \'fatima posici\'f3n en vez de la primera.\
strncmp: ok - Compara la cadena s1 y la s2 hasta n cantidad de caracteres. Si s1 es mayor, devuelve positivo, sino, negativo. Y sino, NULL.\
memchr: ok - Igual que str, pero busca hasta n posiciones.\
memcmp: ok - compara strings hasta n posiciones.\
strnstr: ok - indica si un string mas chico est\'e1 dentro de otro grande hasta n posiciones\
atoi: recibe un storing y retorna un entero.\
calloc: reserva memoria y la guarda con bzeros.\
strdup: duplica una cadena reservando memoria para ello.\
\
PARTE 2\
substr: busca un sbustring dentro de un string\
strjoin: concantena dos strings con reserva de memoria\
strtrim: recorta un string desde adelante y desde atr\'e1s hasta donde est\'e1 indicado el set.\
split:\
\
BONUS}